<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bankspring.mapper.MemberMapper">
    
    <insert id="insert" parameterType="Member">
        insert into member(userid, password, name, age, email, is_admin, regdate) 
        values(#{userid},#{password},#{name},#{age},#{email},0,sysdate)
    </insert>
    
    <update id="update" parameterType="Member" >
        update member set password=#{password}, 
                          email=#{email}
        where userid=#{userid}
    </update>
    
    
    <!-- 로그인 -->
    <select id="login" resultType="Member" parameterType="Command">
        select * from member where userid=#{searchKey} and password=#{searchVal}
    </select>
 
    <select id="getElementById" resultType="Member" parameterType="Command">
        select * 
        from member
        where ${searchKey} = #{searchVal}
    </select>
    
    <select id="list" resultType="Member" parameterType="Command">
       select * 
       from (select rownum as seq, m.* from Member m)
       where seq between #{start} and #{end}
       order by regdate desc
    </select>    
    
    <select id="selectOne" resultType="Member" parameterType="String">
         select * from member where member_id=#{member_id} 
    </select>
    
    <select id="countSome" resultType="int" parameterType="Command">
        select count(*) 
          from member
         where ${searchKey} like '%' || #{searchVal} || '%'
    </select>
    
    <select id="countAll" resultType="int">
        select count(*) from member
    </select>
    
    <!-- id/pw찾기 -->
    <select id="loginSearch" parameterType="Member" resultType="int">
        select count(*) from member where member_name=#{member_name} and member_email=#{member_email}
    </select>
    
    <!-- 이름으로 회원 검색 -->
    <select id="getElementsByName" resultType="Member" parameterType="Command">
		select * 
		from (select rownum as seq, m.* from Member m where ${searchKey} like '%' || #{searchVal} || '%')
		where seq between #{start} and #{end}
		order by regdate desc
		
    </select>    
    
    <!-- delete 삭제 -->
    <delete id="delete" parameterType="String">
        delete from member where member_id=#{mem_id} 
    </delete>
 
    <!-- id 중복체크 -->
    <select id="idCheck" parameterType="Member" resultType="int">
        select count(*) from member where member_id=#{value} 
    </select>        
    
</mapper>
